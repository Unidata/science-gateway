#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+OPTIONS: auto-id:t

#+TITLE: wrangler
#+DATE: <2018-05-07 Mon>
#+AUTHOR: Julien Chastang
#+EMAIL: chastang@ucar.edu
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.3.1 (Org mode 9.1.12)

#+PROPERTY: header-args :eval no

* Establishing an NFS Mount from Wrangler to Jetstream VMs
  :PROPERTIES:
  :CUSTOM_ID: h:6F2C5533
  :END:
** Introduction
   :PROPERTIES:
   :CUSTOM_ID: h:21834535
   :END:

Wrangler is an XSEDE data storage system available both at TACC and IU. Unidata has a sizable disk storage allocation on Wrangler. This document describes how to establish an NFS Mount from Wrangler to a Jetstream VM.

These instructions assume an Ubuntu VM. In the future, we will have a similar document for CentOS.

** Prerequisites
   :PROPERTIES:
   :CUSTOM_ID: h:F402F677
   :END:

Setup the VM in [[https://github.com/Unidata/xsede-jetstream/blob/master/vm-init-readme.md][the usual manner]].

The Jetstream team will have to establish an OpenStack network to open a pipe between Wrangler and Jetstream. Email ~help@xsede.org~ to obtain this network. The ~unidata-wrangler~ network has already been setup for us at Indiana University:

#+BEGIN_SRC shell
$ openstack network list
+--------------------------------------+----------------------+--------------------------------------+
| ID                                   | Name                 | Subnets                              |
+--------------------------------------+----------------------+--------------------------------------+
| 52839426-7790-47ed-b3ef-49392ef78db2 | TG-ATM160027-api-net | cd29aa4e-665c-47df-9db1-569e64a7e0d9 |
| a180e538-acac-42cc-bdfa-ab93d068af0b | nexus-network        | ec0763bf-eca3-4df5-82e1-5085810664d1 |
| a2333b6e-06c5-4a66-9e41-86aa8a961ec0 | unidata-wrangler     | 12006371-87bf-46f6-8829-c907badc369c |
+--------------------------------------+----------------------+--------------------------------------+
#+END_SRC

** Attaching the unidata-wrangler Network onto Your VM
   :PROPERTIES:
   :CUSTOM_ID: h:4295622E
   :END:

#+BEGIN_SRC shell :exports none :shebang "#!/bin/bash" :tangle "../../openstack/bin/wrangler-jetstream.sh"
    usage="$(basename "$0") [-h] [-v, --vm vm id] [-n, --nic wrangler network id] --
    script to setup vm for Wrangler access:\n
        -h  show this help text\n
        -v, --vm vm id\n
        -n, --nic wrangler network id\n"

    while [[ $# > 0 ]]
    do
        key="$1"
        case $key in
            -v|--vm)
                VM_ID="$2"
                shift # past argument
                ;;
            -n|--nic)
                NIC_ID="$2"
                shift # past argument
                ;;
            -h|--help)
                echo -e $usage
                exit
                ;;
        esac
        shift # past argument or value
    done

  if [ -z "$VM_ID" ];
    then
        echo "Must supply a VM ID:"
        echo -e $usage
        exit 1
  fi

  if [ -z "$NIC_ID" ];
    then
        echo "Must supply a network ID:"
        echo -e $usage
        exit 1
  fi

  #+END_SRC

To establish the NFS mount, you first have to attach the ~unidata-wrangler~ network to the VM in question from the OpenStack command line:

#+BEGIN_SRC shell :tangle "../../openstack/bin/wrangler-jetstream.sh"

  openstack server add network ${VM_ID} ${NIC_ID}
#+END_SRC

the result will look something like this:

#+BEGIN_SRC shell
$ openstack server list
+--------------------------------------+--------------------------------+---------+-----------------------------------------------------------------------------+
| ID                                   | Name                           | Status  | Networks                                                                    |
+--------------------------------------+--------------------------------+---------+-----------------------------------------------------------------------------+
| c9529c6c-c4a4-4633-83dc-f3894dbf0027 | TG-ATM160027-jupyterhub        | ACTIVE  | TG-ATM160027-api-net=10.0.0.24, 149.165.168.31; unidata-wrangler=10.5.0.107 |
+--------------------------------------+--------------------------------+---------+-----------------------------------------------------------------------------+
#+END_SRC

** Opening NFS Related Ports
   :PROPERTIES:
   :CUSTOM_ID: h:86EAF003
   :END:

Next you must open a series of NFS related ports both TCP and UDP: ~111~, ~875~, ~892~, ~2049~, ~10053~, ~32803~. To be on the safe side, limit those ports to the to the Wrangler IP (~149.165.238.47~).

*** Create the Wrangler Security Group
    :PROPERTIES:
    :CUSTOM_ID: h:C3E31F14
    :END:

Create a Wrangler security group that we can subsequently re-use. Do this once.

#+BEGIN_SRC shell :shebang "#!/bin/bash" :tangle "../../openstack/bin/wrangler-secgroup.sh"

  openstack security group create --description "wrangler & icmp enabled" wrangler

  WRANGLER_IP=149.165.238.47

  for i in 111 875 892 2049 10053 32803
  do
      openstack security group rule create wrangler --protocol tcp \
                --dst-port $i:$i --remote-ip ${WRANGLER_IP}
      openstack security group rule create wrangler --protocol udp \
                --dst-port $i:$i --remote-ip ${WRANGLER_IP}
  done

  openstack security group rule create wrangler --protocol icmp
#+END_SRC

*** Attach Wrangler Security Group to VM
    :PROPERTIES:
    :CUSTOM_ID: h:FE477C60
    :END:

From the OpenStack command line, attach the ~wrangler~ security group to the VM.

#+BEGIN_SRC shell :tangle "../../openstack/bin/wrangler-jetstream.sh"
  openstack server add security group ${VM_ID} wrangler
#+END_SRC

** Additional Networking Setup On VM
   :PROPERTIES:
   :CUSTOM_ID: h:8CC1C481
   :END:

*** rpcbind
    :PROPERTIES:
    :CUSTOM_ID: h:4F9D6A34
    :END:

#+BEGIN_SRC shell :exports none :shebang "#!/bin/bash" :tangle "../../openstack/bin/wrangler-mount.sh"
  if [ "$EUID" -ne 0 ]
    then echo "Please run as root"
    exit
  fi


  usage="$(basename "$0") [-h] [-e, --ens network interface] [-m, --mount dir] --
  script to create Unidata mount from Wrangler to Jetstream:\n
      -h  show this help text\n
      -e, --ens network interface\n
      -m, --mount mount point\n"

  while [[ $# > 0 ]]
  do
      key="$1"
      case $key in
          -e|--ens)
              ENS="$2"
              shift # past argument
              ;;
          -m|--mount)
              MOUNT="$2"
              shift # past argument
              ;;
          -h|--help)
              echo -e $usage
              exit
              ;;
      esac
      shift # past argument or value
  done

  if [ -z "$ENS" ];
    then
        echo "Must supply a network interface:"
        echo -e $usage
        exit 1
  fi

  if [ -z "$MOUNT" ];
    then
        echo "Must supply a mount point:"
        echo -e $usage
        exit 1
  fi

    #+END_SRC


The ~rpcbind~ IP is provided by the Jetstream team when they set up the VPN. It will always be a static IP number assuming we are using the same Wrangler mount point. For all intents and purposes, for ~unidata-wrangler~ network, it will be ~10.5.0.96/28~. Login to the VM in question and as ~sudo~:

#+BEGIN_SRC shell :tangle "../../openstack/bin/wrangler-mount.sh" 
  echo rpcbind : 10.5.0.96/28 127.0.0.1 | tee --append /etc/hosts.allow > /dev/null
#+END_SRC

*** ifconfig
    :PROPERTIES:
    :CUSTOM_ID: h:BF5FABB7
    :END:

Add this point, you have to add the correct network to =/etc/udev/rules.d/70-persistent-net.rules= and =/etc/network/interfaces=. To achieve this run ~ifconfig -a~ which will generate something like:

#+BEGIN_SRC shell
  ens3      Link encap:Ethernet  HWaddr fa:16:3e:0c:70:6c
            inet addr:10.0.0.26  Bcast:10.0.0.255  Mask:255.255.255.0
            inet6 addr: fe80::f816:3eff:fe0c:706c/64 Scope:Link
            UP BROADCAST RUNNING MULTICAST  MTU:9000  Metric:1
            RX packets:4065 errors:0 dropped:0 overruns:0 frame:0
            TX packets:2609 errors:0 dropped:0 overruns:0 carrier:0
            collisions:0 txqueuelen:1000
            RX bytes:27781617 (27.7 MB)  TX bytes:210853 (210.8 KB)

  ens4      Link encap:Ethernet  HWaddr fa:16:3e:10:af:8d
            BROADCAST MULTICAST  MTU:1500  Metric:1
            RX packets:0 errors:0 dropped:0 overruns:0 frame:0
            TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
            collisions:0 txqueuelen:1000
            RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

  lo        Link encap:Local Loopback
            inet addr:127.0.0.1  Mask:255.0.0.0
            inet6 addr: ::1/128 Scope:Host
            UP LOOPBACK RUNNING  MTU:65536  Metric:1
            RX packets:160 errors:0 dropped:0 overruns:0 frame:0
            TX packets:160 errors:0 dropped:0 overruns:0 carrier:0
            collisions:0 txqueuelen:1
            RX bytes:11840 (11.8 KB)  TX bytes:11840 (11.8 KB)
#+END_SRC

Examine the output of ~ifconfig~ and find the network that is not in ~UP~ state, in this case ~ens4~.

*** /etc/network/interfaces
    :PROPERTIES:
    :CUSTOM_ID: h:95D34D99
    :END:

As ~sudo~, add the following snippet to =/etc/network/interfaces=:

#+BEGIN_SRC shell :tangle "../../openstack/bin/wrangler-mount.sh"
  cat <<EOF >> /etc/network/interfaces

  # Wrangler network
  auto ${ENS}
  iface ${ENS} inet dhcp
  EOF
#+END_SRC

*** /etc/udev/rules.d/70-persistent-net.rules
    :PROPERTIES:
    :CUSTOM_ID: h:C4236EE6
    :END:

Again, as ~sudo~ user, add this bit to =/etc/udev/rules.d/70-persistent-net.rules=:

#+BEGIN_SRC shell :tangle "../../openstack/bin/wrangler-mount.sh"
  echo SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", \
       ATTR{address}==\"fa:16:3e:f8:cf:ea\", NAME=\"${ENS}\" \
      | tee --append /etc/udev/rules.d/70-persistent-net.rules > /dev/null
#+END_SRC

*** ifup
    :PROPERTIES:
    :CUSTOM_ID: h:2188C4A9
    :END:

Finally issue:

#+BEGIN_SRC shell :tangle "../../openstack/bin/wrangler-mount.sh"
 ifup ${ENS}
#+END_SRC

** Mounting Wrangler
   :PROPERTIES:
   :CUSTOM_ID: h:26D0062F
   :END:

We are ready to mount our Wrangler data directory onto, say, =/wrangler=. First, create the mount point:

#+BEGIN_SRC shell :tangle "../../openstack/bin/wrangler-mount.sh"
  mkdir -p ${MOUNT}
#+END_SRC

Then mount:

#+BEGIN_SRC shell :tangle "../../openstack/bin/wrangler-mount.sh"
  mount -v -t nfs iuwrang-c111.uits.indiana.edu:/data/projects/G-818573 \
        ${MOUNT} -o rsize=131072,wsize=131072,timeo=300,hard,vers=3
#+END_SRC

** Ensure Volume Availability Upon Machine Restart
   :PROPERTIES:
   :CUSTOM_ID: h:D458816F
   :END:

You want to ensure data volumes are available when the VM starts (for example after a reboot). To achieve this objective, you can run this command which will add an entry to the =/etc/fstab= file:

#+BEGIN_SRC shell :tangle "../../openstack/bin/wrangler-mount.sh"
  echo iuwrang-c111.uits.indiana.edu:/data/projects/G-818573 ${MOUNT} \
       nfs rsize=131072,wsize=131072,timeo=300,hard,nofail \
      | tee --append /etc/fstab > /dev/null
#+END_SRC
