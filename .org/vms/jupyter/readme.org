#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+OPTIONS: auto-id:t
#+TITLE: Creating Jupyter VM on Jetstream
#+DATE:  <2017-06-26 Mon>
#+AUTHOR: Julien Chastang
#+EMAIL: chastang@ucar.edu
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.1.2 (Org mode 9.0.5)

#+PROPERTY: header-args :noweb yes :eval no

* Creating a Jupyter VM on Jetstream
  :PROPERTIES:
  :CUSTOM_ID: h:CF2006B5
  :END:
** Create a Jupyter VM on Jetstream
   :PROPERTIES:
   :CUSTOM_ID: h:CD4EE10C
   :END:

Create an ~m1.xlarge~ VM with the [[https://github.com/Unidata/xsede-jetstream/blob/master/openstack/readme.md][Jetstream OpenStack API]]. [[https://github.com/Unidata/xsede-jetstream/blob/master/openstack/readme.md#h:9BEEAB97][Create and attach]] a 1TB =/notebooks= and =/scratch= volumes to that VM. Work with Unidata system administrator staff to have this VM's IP address resolve to =jupyter-jetstream.unidata.ucar.edu=.

** Clone the xsede-jetstream
   :PROPERTIES:
   :CUSTOM_ID: h:30553515
   :END:

 We will be making heavy use of the ~Unidata/xsede-jetstream~ git repository.

 #+BEGIN_SRC shell :tangle no :exports code
   git clone https://github.com/Unidata/xsede-jetstream ~/xsede-jetstream
 #+END_SRC

** Prepare Jupyter VM for Docker and docker-compose
   :PROPERTIES:
   :CUSTOM_ID: h:00BDD041
   :END:

With the help of Docker and ~docker-compose~, starting a VM containing an IDD archiver is relatively simple. [[https://github.com/Unidata/xsede-jetstream/blob/master/docker-readme.md][See here to install Docker and docker-compose]]. 

** Jupyter Configuration
   :PROPERTIES:
   :CUSTOM_ID: h:1217328A
   :END:

#+BEGIN_SRC shell :tangle ../../../vms/jupyter/jupyter-install.sh
  mkdir -p ~/config/
  cp jupyterhub_config.py ~/config/
#+END_SRC

Edit the =~/config/jupyterhub_config.py=.

** Jupyter log Directory
   :PROPERTIES:
   :CUSTOM_ID: h:098522DC
   :END:

You will need Apache Tomcat and TDS log directories:

#+BEGIN_SRC shell :tangle ../../../vms/jupyter/jupyter-install.sh
   mkdir -p ~/logs/jupyter/
 #+END_SRC

** SSL Certificate
   :PROPERTIES:
   :CUSTOM_ID: h:7D97FA52
   :END:

In the =~/xsede-jetstream/vms/jupyter/files/= directory, generate a self-signed certificate with ~openssl~ (or better yet, obtain a real certificate from a certificate authority).

#+BEGIN_SRC shell :tangle ../../../vms/jupyter/jupyter-install.sh
  mkdir -p ~/config/ssl/

  openssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 -subj \
    "/C=US/ST=Colorado/L=Boulder/O=Unidata/CN=jetstream.unidata.ucar.edu" \
    -keyout ~/config/ssl/ssl.key \
    -out ~/config/ssl/ssl.crt
#+END_SRC

** Ports 80, 443, and 8000
   :PROPERTIES:
   :CUSTOM_ID: h:ED417641
   :END:

[[https://github.com/Unidata/xsede-jetstream/blob/master/openstack/readme.md#h:D6B1D4C2][Open ports]] ~80~, ~443~, and ~8000~ on the Jupyter VM via OpenStack.

** docker-compose.yml
   :PROPERTIES:
   :CUSTOM_ID: h:8F37201D
   :END:

Based on the directory set we have defined, the =docker-compose.yml= file will look something like:

#+INCLUDE: "../../../vms/jupyter/docker-compose.yml" src yaml

** Start JupyterHub
   :PROPERTIES:
   :CUSTOM_ID: h:62B48A14
   :END:

Once you have done the work of setting up JupyterHub related directories,

#+BEGIN_SRC shell
  docker-compose up -d
#+END_SRC

to start JupyterHub

** Passwords for Users
   :PROPERTIES:
   :CUSTOM_ID: h:742BC415
   :END:

Assign temporary passwords for admin and whitelisted users defined earlier in the =~/config/jupyterhub_config.py=.

You can generate random passwords with ~openssl~. For example,

#+BEGIN_SRC shell
  openssl rand -base64 12
#+END_SRC

Followed by:

#+BEGIN_SRC shell
  docker exec jupyter /bin/sh -c 'echo <user>:<password> | /usr/sbin/chpasswd'
#+END_SRC

Communicate that password to the user via email. Have them change their password by logging into this JupyterHub instance with the username and temporary password and going to New, Terminal which will open a Unix terminal. Have them run ~passwd~ command.

** Navigate to JupyterHub
   :PROPERTIES:
   :CUSTOM_ID: h:4DCCED79
   :END:

In a web browser, navigate to [[https://jupyter-jetstream.unidata.ucar.edu:8000][https://jupyter-jetstream.unidata.ucar.edu:8000]].
