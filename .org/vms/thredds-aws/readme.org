#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+OPTIONS: auto-id:t
#+TITLE: Creating a THREDDS AWS Nexrad VM on Jetstream
#+DATE: <2019-02-13 Wed>
#+AUTHOR: Julien Chastang
#+EMAIL: chastang@ucar.edu
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.1.2 (Org mode 9.0.5)

#+PROPERTY: header-args :eval no :tangle no
* Create a THREDDS AWS Nexrad VM on Jetstream
  :PROPERTIES:
  :CUSTOM_ID: h-4D049C67
  :END:
** Create a THREDDS VM on Jetstream
   :PROPERTIES:
   :CUSTOM_ID: h-06E230D1
   :END:

Create an ~m1.large~ VM with the [[file:../../openstack/readme.org][Jetstream OpenStack API]]. Work with Unidata system administrator staff to have this VM's IP address resolve to =thredds-aws.unidata.ucar.edu=

** Clone the xsede-jetstream Repository
   :PROPERTIES:
   :CUSTOM_ID: h-966B0207
   :END:

We will be making heavy use of the ~Unidata/xsede-jetstream~ git repository.

#+BEGIN_SRC shell :tangle no :exports code
  git clone https://github.com/Unidata/xsede-jetstream ~/xsede-jetstream
#+END_SRC

** Build the AWS Nexrad TDS Docker Container
   :PROPERTIES:
   :CUSTOM_ID: h-154BBC9F
   :END:

From the =~/xsede-jetstream/vms/thredds-aws= directory:

#+BEGIN_SRC shell :tangle no :exports code
  docker build -t unidata/nexrad-tds-docker:latest .
#+END_SRC

** Start TDS With Docker and docker-compose
   :PROPERTIES:
   :CUSTOM_ID: h-74EEEE2C
   :END:

With the help of Docker and ~docker-compose~, starting a VM with the TDS should be fairly easy. There are a few directories you will need to map from outside to within the container. [[file:../../vm-init-readme.org::#h-786799C4][See here to install Docker and docker-compose]].

** TDS Configuration
   :PROPERTIES:
   :CUSTOM_ID: h-717697EB
   :END:

#+BEGIN_SRC shell :tangle ../../../vms/thredds-aws/thredds-aws-install.sh
  mkdir -p ~/tdsconfig/
  wget http://unidata-tds.s3.amazonaws.com/tdsConfig/awsL2/config.zip -O ~/tdsconfig/config.zip
  unzip ~/tdsconfig/config.zip -d ~/tdsconfig/
#+END_SRC

*** Supply Contact and Host Information in threddsConfig.xml
    :PROPERTIES:
    :CUSTOM_ID: h-615B0684
    :END:

Edit the =~/tdsconfig/threddsConfig.xml= to supply contact and host institution by filling out the ~contact~ and ~hostInstitution~ XML elements. For example:

#+BEGIN_EXAMPLE
  <contact>
    <name>THREDDS Support</name>
    <organization>Unidata</organization>
    <email>support-thredds@unidata.ucar.edu</email>
  </contact>
  <hostInstitution>
    <name>Unidata</name>
    <webSite>http://www.unidata.ucar.edu/</webSite>
    <logoUrl>https://www.unidata.ucar.edu/software/thredds/v4.6/tds/images/unidataLogo.png</logoUrl>
    <logoAltText>Unidata</logoAltText>
  </hostInstitution>
#+END_EXAMPLE

** TDS log Directories
   :PROPERTIES:
   :CUSTOM_ID: h-F52D01A2
   :END:
*** Create log Directories
    :PROPERTIES:
    :CUSTOM_ID: h-99E9AD76
    :END:

You will need Apache Tomcat and TDS log directories:

 #+BEGIN_SRC shell :tangle ../../../vms/thredds-aws/thredds-aws-install.sh
   mkdir -p ~/logs/tds-tomcat/
   mkdir -p ~/logs/tds/
 #+END_SRC

*** Scour log Directories
    :PROPERTIES:
    :CUSTOM_ID: h-AC0813AF
    :END:

Scour occasionally so the log directories do not fill up.

#+BEGIN_SRC shell :tangle ../../../vms/thredds-aws/thredds-aws-install.sh
  (crontab -l ; echo "59 0 * * * find ~/logs -regex '.*\.\(log\|txt\)' -type f -mtime +10 -exec rm -f {} \;")| crontab -
#+END_SRC

** S3Objects Directory
   :PROPERTIES:
   :CUSTOM_ID: h-F6EBEBDF
   :END:

*** Create S3Objects Directory
    :PROPERTIES:
    :CUSTOM_ID: h-763C22DA
    :END:

Files served out of S3 are first written to local file system, then served via THREDDS.

 #+BEGIN_SRC shell :tangle ../../../vms/thredds-aws/thredds-aws-install.sh
   mkdir -p ~/S3Objects
 #+END_SRC

*** Scour S3Objects Directory
    :PROPERTIES:
    :CUSTOM_ID: h-483C35F9
    :END:

#+BEGIN_SRC shell :tangle ../../../vms/thredds-aws/thredds-aws-install.sh
  (crontab -l ; echo "*/5 * * * * find ~/S3Objects -mindepth 1 -mmin +15 -delete")| crontab -
#+END_SRC

** SSL Certificate
   :PROPERTIES:
   :CUSTOM_ID: h-0B00E7AE
   :END:

In the =~/xsede-jetstream/vms/thredds-aws/files/= directory, generate a self-signed certificate with ~openssl~ (or better yet, obtain a real certificate from a certificate authority).

#+BEGIN_SRC shell :tangle ../../../vms/thredds-aws/thredds-aws-install.sh
  openssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 -subj \
    "/C=US/ST=Colorado/L=Boulder/O=Unidata/CN=jetstream.unidata.ucar.edu" \
    -keyout ~/xsede-jetstream/vms/thredds-aws/files/ssl.key \
    -out ~/xsede-jetstream/vms/thredds-aws/files/ssl.crt
#+END_SRC

** Ports 80, 443 and 8443
   :PROPERTIES:
   :CUSTOM_ID: h-1541998B
   :END:

[[file:../../openstack/readme.org::#h-D6B1D4C2][Open port]] ~80~ on the THREDDS VM via OpenStack. Port ~80~ requests will be forwarded to ~8080~ inside the THEREDDS Docker container. In addition, open ports ~443~ and ~8443~ for SSL and communication from the TDM.

** docker-compose.yml
   :PROPERTIES:
   :CUSTOM_ID: h-B1EEBC0A
   :END:

Based on the directory set we have defined, the =docker-compose.yml= file that looks like:

#+INCLUDE: "../../../vms/thredds-aws/docker-compose.yml" src yaml

*** THREDDS Environment Variable Parameterization
    :PROPERTIES:
    :CUSTOM_ID: h-F0A8F4C2
    :END:

You can provide additional THREDDS parameterization via the =compose.env= file referenced in the =docker-compose.yml= file.

#+INCLUDE: "../../../vms/thredds-aws/compose.env" src shell

** Start the TDS
   :PROPERTIES:
   :CUSTOM_ID: h-DF4BC998
   :END:

Once you have done the work of setting up THREDDS related directories in the way you like,

#+BEGIN_SRC shell
  docker-compose up -d
#+END_SRC

to start the TDS
** Navigate to the TDS
   :PROPERTIES:
   :CUSTOM_ID: h-628E2897
   :END:
In a web browser, navigate to [[https://tds.scigw.unidata.ucar.edu/thredds/catalog.html][http://http://thredds-aws.unidata.ucar.edu/thredds/catalog.html]] to see if is running.
