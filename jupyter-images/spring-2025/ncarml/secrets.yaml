imagePullSecret:
  create: true
  registry: "https://index.docker.io/v1/"
  username: "xxx"
  password: "xxx"

hub:
  cookieSecret: "xxx"
  config:
    Authenticator:
      admin_users:
        - admins
      #If you have a large list of users, consider using allowed_users.yaml
      allowed_users:
        - users
      # necessary for jhub admins to add user via admin page `<url>/hub/admin`
      allow_existing_users: true
      # see co-located allowed_users.yaml
    DummyAuthenticator:
      password: "xxx"
    JupyterHub:
      authenticator_class: dummy


proxy:
  secretToken: "xxx"

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt"
    #For manually issuing certificates: see vms/jupyter/readme.md
    #cert-manager.io/issuer: "incommon"
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
  hosts:
      - pyaos-workshop.unidata.ucar.edu
  tls:
      - hosts:
         - pyaos-workshop.unidata.ucar.edu
        secretName: certmanager-tls-jupyterhub

#For having a dedicated core node: see vms/jupyter/readme.md
#scheduling:
#  corePods:
#    tolerations:
#      - key: hub.jupyter.org/dedicated
#        operator: Equal
#        value: core
#        effect: NoSchedule
#      - key: hub.jupyter.org_dedicated
#        operator: Equal
#        value: core
#        effect: NoSchedule
#    nodeAffinity:
#      matchNodePurpose: require

singleuser:
  extraEnv:
    NBGITPULLER_DEPTH: "0"
  storage:
    capacity: 10Gi
  startTimeout: 600
  memory:
    guarantee: 8G
    limit: 8G
  cpu:
    guarantee: 2
    limit: 2.75
  defaultUrl: "/lab"
  image:
    name: unidata/ncarml25s
    tag: "xxx"
  lifecycleHooks:
    postStart:
      exec:
          command:
            - "bash"
            - "-c"
            - >
              dir="/home/jovyan/.ssh"; [ -d $dir ] && { chmod 700 $dir && chmod -f 600 $dir/* && chmod -f 644 $dir/*.pub; } || true;
              cp -t /home/jovyan /Acknowledgements.ipynb /update_material.ipynb;
              gitpuller https://github.com/ThomasMGeo/ML_workshop2023 main ML_workshop2023;
              python /default_kernel.py $DEFAULT_ENV_NAME /home/jovyan;
              [[ -f $HOME/.bashrc ]] || cp /etc/skel/.bashrc $HOME/;
              [[ -f $HOME/.profile ]] || cp /etc/skel/.profile $HOME/;
              [[ -f $HOME/.bash_logout ]] || cp /etc/skel/.bash_logout $HOME/;
              [[ -f $HOME/.condarc ]] || cp /.condarc $HOME/;
              [ -d "/share" ] && [ ! -L ~/share ] && ln -s /share ~/share || true;
