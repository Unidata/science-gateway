hub:
  cookieSecret: "xxx"
  config:
    Authenticator:
      admin_users:
        - admins
      #If you have a large list of users, consider using allowed_users.yaml
      allowed_users:
        - users
    GitHubOAuthenticator:
      client_id: "xxx"
      client_secret: "xxx"
      oauth_callback_url: "https://<hub-dns-name>:443/oauth_callback"
    JupyterHub:
      authenticator_class: github
  extraConfig:
    01-no-labels: |
      from kubespawner import KubeSpawner
      class CustomSpawner(KubeSpawner):
        def _build_common_labels(self, extra_labels):
          labels = super()._build_common_labels(extra_labels)
          # Until https://github.com/jupyterhub/kubespawner/issues/498
          # is fixed
          del labels['hub.jupyter.org/username']
          return labels
      c.JupyterHub.spawner_class = CustomSpawner


proxy:
  secretToken: "xxx"

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt"
    #For manually issuing certificates: see vms/jupyter/readme.md
    #cert-manager.io/issuer: "incommon"
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
  hosts:
      - "<hub-dns-name>"
  tls:
      - hosts:
         - "<hub-dns-name>"
        secretName: certmanager-tls-jupyterhub

#For having a dedicated core node: see vms/jupyter/readme.md
#scheduling:
#  corePods:
#    tolerations:
#      - key: hub.jupyter.org/dedicated
#        operator: Equal
#        value: core
#        effect: NoSchedule
#      - key: hub.jupyter.org_dedicated
#        operator: Equal
#        value: core
#        effect: NoSchedule
#    nodeAffinity:
#      matchNodePurpose: require

singleuser:
  extraEnv:
    NBGITPULLER_DEPTH: "0"
  storage:
    capacity: 5Gi
  startTimeout: 600
  memory:
    guarantee: 4G
    limit: 4G
  cpu:
    guarantee: 1
    limit: 2
  defaultUrl: "/lab"
  image:
    name: "unidata/<image-name>"
    tag: "xxx"
  lifecycleHooks:
    postStart:
      exec:
          command:
            - "sh"
            - "-c"
            - >
              dir="/home/jovyan/.ssh"; [ -d $dir ] && { chmod 700 $dir && \
              chmod -f 600 $dir/* && chmod -f 644 $dir/*.pub; } || true;
              cp -t /home/jovyan /Acknowledgements.ipynb /update_material.ipynb;
              gitpuller <git-url> <branch-name> <dir-name>;
              python /default-kernel.py $DEFAULT_ENV_NAME /home/jovyan;
  #Multiple profiles: see vms/jupyter/readme.md
  #profileList:
  #- display_name: "High Power (default)"
  #  description: "12 GB of memory; up to 4 vCPUs"
  #  kubespawner_override:
  #    mem_guarantee: 12G
  #    mem_limit: 12G
  #    cpu_guarantee: 2
  #    cpu_limit: 4
  #  default: true
  #- display_name: "Low Power"
  #  description: "6 GB of memory; up to 2 vCPUS"
  #  kubespawner_override:
  #    mem_guarantee: 6G
  #    mem_limit: 6G
  #    cpu_guarantee: 1
  #    cpu_limit: 2
